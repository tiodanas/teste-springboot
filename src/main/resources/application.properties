# -----------------------------------------------------------------------------
# H2 Web Console (H2ConsoleProperties)

# Enable the console. Default value: false. Note: with Spring Boot Dev Tools enabled, default value is true.
spring.h2.console.enabled=true

# Path at which the console will be available. Default value: /h2-console
spring.h2.console.path=/api/h2-console

# spring.h2.console.settings.trace=false # Enable trace output.
# spring.h2.console.settings.web-allow-others=false # Enable remote access.


# -----------------------------------------------------------------------------
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)

# Enable logging of SQL statements. Default value: false
spring.jpa.show-sql=true

# Enable format of SQL statements. Default value: false
spring.jpa.properties.hibernate.format_sql=true

# Initialize the schema on startup. Default value: false
spring.jpa.generate-ddl=true

# DDL mode.
# This is actually a shortcut for the "hibernate.hbm2ddl.auto" property.
# Default to "create-drop" when using an embedded database, "none" otherwise.
spring.jpa.hibernate.ddl-auto=create-drop

# Name of the target database to operate on, auto-detected by default.
# Can be alternatively set using the "Database" enum.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

### spring.data.jpa.repositories.enabled=true # Enable JPA repositories.
### spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
### spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.
### spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.
### spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.
### spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate's newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.
### spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
### spring.jpa.properties.*= # Additional native properties to set on the JPA provider.


# -----------------------------------------------------------------------------
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.driver-class-name=org.h2.Driver

# JDBC url of the database.
spring.datasource.url=jdbc:h2:mem:devdb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
# Name of the datasource.
spring.datasource.name=devdb
# User name of the database.
spring.datasource.username=sa
# Login password of the database.
spring.datasource.password=
# Do not stop if an error occurs while initializing the database.
spring.datasource.continue-on-error=false

### spring.datasource.data= # Data (DML) script resource references.
### spring.datasource.data-username= # User of the database to execute DML scripts (if different).
### spring.datasource.data-password= # Password of the database to execute DML scripts (if different).
### spring.datasource.dbcp2.*= # Commons DBCP2 specific settings
### spring.datasource.generate-unique-name=false # Generate a random datasource name.
### spring.datasource.hikari.*= # Hikari specific settings
### spring.datasource.initialize=true # Populate the database using 'data.sql'.
### spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).
### spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username & password are ignored when set.
### spring.datasource.platform=all # Platform to use in the schema resource (schema-${platform}.sql).
### spring.datasource.schema= # Schema (DDL) script resource references.
### spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).
### spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).
### spring.datasource.separator=; # Statement separator in SQL initialization scripts.
### spring.datasource.sql-script-encoding= # SQL scripts encoding.
### spring.datasource.tomcat.*= # Tomcat datasource specific settings
### spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.